---
- hosts: all
  user: ronald
  become: yes

  vars_files:
    - vars/main.yml

  roles:
    - common
    - virtualbox
    - terraform
  
  tasks:
  - name: Install various snap packages
    snap:
      name: "{{ item }}"
      classic: yes
    with_items:
      - code
      - intellij-idea-ultimate
      - goland
      - pycharm-professional
      - clion
      - go
      - docker
      - microk8s
      - helm
      - kubectl

  - name: Snap does not update packages only checks existence, refresh with shell command
    shell: snap refresh

  - name: Post docker installation steps
    group:
      name: docker
      state: present

  - name: Add the user 'ronald' to the group of 'docker'
    user:
      name: ronald
      append: yes
      groups: docker

  # Disabled kubectl alias in favor of independent install.
  # Make sure to copy kubeconfig. 
  # See: https://microk8s.io/docs/working-with-kubectl
  #
  # - name: Add kubectl alias for microk8s kubectl
  #   lineinfile:
  #     path: /home/ronald/.zshrc
  #     line: "alias kubectl='microk8s kubectl'"
  #     regexp: "^alias kubectl='microk8s kubectl'"
  #     insertafter: EOF

  - name: Post microk8s installation steps
    group:
      name: microk8s
      state: present

  - name: Add the user 'ronald' to the group of 'microk8s'
    user:
      name: ronald
      append: yes
      groups: microk8s

  - name: IPtables FORWARD policy ACCEPT for k8s networking
    command: iptables -P FORWARD ACCEPT 

  # Azure CLI install the hard way
  # https://github.com/Azure/azure-cli/issues/12758
  # https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-linux?pivots=apt

  - name: Azure CLI install the hard way
    shell: |
      curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
      AZ_REPO=$( cat /etc/upstream-release/lsb-release | grep -Po 'DISTRIB_CODENAME=\K.*')
      echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | tee /etc/apt/sources.list.d/azure-cli.list
    args:
      executable: /bin/bash

  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: yes

  - name: Install various generic packages
    apt:
      pkg:
      - azure-cli

  - name: Upgrade Azure CLI
    command: az upgrade --yes

  # Looks like snap/bin is not added to the path on remote ssh. Why? This is a quick fix
  - name: Add snap/bin to the path
    lineinfile:
      path: /home/ronald/.zshrc
      line: 'export PATH="$PATH:/snap/bin"'
      regexp: '^export PATH="$PATH:/snap/bin"'
      insertafter: EOF

 # FIXME 20220820 Errors whilee creating symbolic link
  # - name: Add kubectx and kubens for easy switching context and namespaces
  #   shell: |
  #     git clone https://github.com/ahmetb/kubectx /opt/kubectx
  #     ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx
  #     ln -s /opt/kubectx/kubens /usr/local/bin/kubens
  #     mkdir -p ~/.oh-my-zsh/completions
  #     chmod -R 755 ~/.oh-my-zsh/completions
  #     ln -s /opt/kubectx/completion/_kubectx.zsh ~/.oh-my-zsh/completions/_kubectx.zsh
  #     ln -s /opt/kubectx/completion/_kubens.zsh ~/.oh-my-zsh/completions/_kubens.zsh      
  #   args:
  #     executable: /bin/bash

  - name: Add Vagrant
    apt:
      deb: https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_x86_64.deb

  ### Install some new things. Move this to roles later
  # - name: Download kustomize
  #   ansible.builtin.get_url:
  #     url: https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh
  #     dest: /tmp/install_kustomize.sh

  # - name: Run kustomize
  #   shell: "cat /tmp/install_kustomize.sh | bash | mv kustomize /usr/local/bin/kustomize"


  # - name: Install poetry
  #   shell: "curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -"


